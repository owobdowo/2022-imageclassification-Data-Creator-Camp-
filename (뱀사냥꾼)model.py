{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOr1Y7gnPcOsQ30f3r5FgnT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"5sBtu__rJwJD"},"outputs":[],"source":["\"\"\" \n","This file is a sample code of model.py\n","\"\"\"\n","\n","\n","import tensorflow as tf\n","\n","\n","\"\"\"\n","model_configs : all the arguments necessary for your model design.\n","\n","EX) model_configs = {\"num_blocks\" : 6, \"activation_func\" : 'relu', \"norm_layer\" : 'batch_norm'} \n","\"\"\"\n","model_configs = {\n","    \n","} # fill in your model configs\n","\n","\n","\"\"\" You can change the model name and implement your model. \"\"\"\n","class Classifier(tf.keras.Model):\n","    def __init__(self, num_classes=None, **kwargs):\n","        super().__init__()\n","    \n","    def call(self, x):\n","        return self.fc(x)\n","    \n","\n","\n","\"\"\" [IMPORTANT]\n","get_classifier function will be imported in evaluation file.\n","You should pass all the model configuration arguments in the get_classifier function \n","so that we can successfully load your exact model\n","saved in the submitted model checktpoint file.\n","#점수파일에 넣기 위해 모델의 모든 구성요소가 get_classifier함수에 들어가야한다...\n","\"\"\"\n","def get_classifier(num_classes=20):\n","  model = Sequential([\n","    \n","  layers.experimental.preprocessing.Rescaling(1./255, input_shape=(img_height, img_width, 3)),\n","  layers.experimental.preprocessing.Normalization(),\n","\n","  layers.Conv2D(16, 3, padding='same', activation='relu'),\n","  layers.MaxPooling2D(),\n","  layers.Conv2D(32, 3, padding='same', activation='relu'),\n","  layers.MaxPooling2D(),\n","  layers.Conv2D(64, 3, padding='same', activation='relu'),\n","  layers.MaxPooling2D(),\n","  layers.Flatten(),\n","  layers.Dense(128, activation='relu'),\n","  layers.Dense(num_classes)])\n","  return Classifier(num_classes=num_classes, **model_configs)\n","\n","\n","\n","\n"]}]}